{"ast":null,"code":"import _defineProperty from \"/Users/freddyhaug/Desktop/JavaScript/RSVP-starting-pack/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { TOGGLE_FILTER, SEARCH_GUEST, CLEAR_SEARCH, ADD_GUEST, REMOVE_GUEST } from './../type';\nexport default ((state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_GUEST:\n      return _objectSpread({}, state, {\n        guests: [...state.guests, payload] //payload is the new one\n\n      });\n\n    case REMOVE_GUEST:\n      return _objectSpread({}, state, {\n        guests: [...state.guests.filter(guest => guest.id !== payload)]\n      });\n\n    case TOGGLE_FILTER:\n      return _objectSpread({}, state, {\n        //cant mutate state directly so we make a copy of it...\n        filterGuests: !state.filterGuests\n      });\n\n    case SEARCH_GUEST:\n      const reg = new RegExp(\"\".concat(payload), 'gi');\n      return _objectSpread({}, state, {\n        search: state.guests.filter(guest => guest.name.match(reg))\n      });\n\n    case CLEAR_SEARCH:\n      return _objectSpread({}, state, {\n        search: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/freddyhaug/Desktop/JavaScript/RSVP-starting-pack/src/context/guestContext/guestReducer.js"],"names":["TOGGLE_FILTER","SEARCH_GUEST","CLEAR_SEARCH","ADD_GUEST","REMOVE_GUEST","state","type","payload","guests","filter","guest","id","filterGuests","reg","RegExp","search","name","match"],"mappings":";;;;;;AAAA,SACIA,aADJ,EAEIC,YAFJ,EAGIC,YAHJ,EAIIC,SAJJ,EAKIC,YALJ,QAMO,WANP;AAQA,gBAAe,CAACC,KAAD,EAAQ;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAR,KAA4B;AACvC,UAAOD,IAAP;AACI,SAAKH,SAAL;AACI,+BACOE,KADP;AAEIG,QAAAA,MAAM,EAAC,CAAC,GAAGH,KAAK,CAACG,MAAV,EAAkBD,OAAlB,CAFX,CAEsC;;AAFtC;;AAIJ,SAAKH,YAAL;AACI,+BACOC,KADP;AAEIG,QAAAA,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAN,CAAaC,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaJ,OAA1C,CAAJ;AAFZ;;AAIJ,SAAKP,aAAL;AACI,+BACOK,KADP;AACc;AACVO,QAAAA,YAAY,EAAE,CAACP,KAAK,CAACO;AAFzB;;AAIJ,SAAKX,YAAL;AACI,YAAMY,GAAG,GAAG,IAAIC,MAAJ,WAAcP,OAAd,GAAyB,IAAzB,CAAZ;AACA,+BACOF,KADP;AAEIU,QAAAA,MAAM,EAAEV,KAAK,CAACG,MAAN,CAAaC,MAAb,CAAoBC,KAAK,IAAKA,KAAK,CAACM,IAAN,CAAWC,KAAX,CAAiBJ,GAAjB,CAA9B;AAFZ;;AAIJ,SAAKX,YAAL;AACI,+BACOG,KADP;AAEIU,QAAAA,MAAM,EAAE;AAFZ;;AAIJ;AACI,aAAOV,KAAP;AA5BR;AA8BH,CA/BD","sourcesContent":["import {\n    TOGGLE_FILTER,\n    SEARCH_GUEST,\n    CLEAR_SEARCH,\n    ADD_GUEST,\n    REMOVE_GUEST\n} from './../type'\n\nexport default (state, {type, payload}) => {\n    switch(type){\n        case ADD_GUEST:\n            return{\n                ...state,\n                guests:[...state.guests, payload] //payload is the new one\n            }\n        case REMOVE_GUEST:\n            return{\n                ...state,\n                guests: [...state.guests.filter(guest => guest.id !== payload)]\n            }\n        case TOGGLE_FILTER:\n            return{\n                ...state, //cant mutate state directly so we make a copy of it...\n                filterGuests: !state.filterGuests\n            }\n        case SEARCH_GUEST:\n            const reg = new RegExp(`${payload}`, 'gi')\n            return{\n                ...state,\n                search: state.guests.filter(guest =>  guest.name.match(reg))\n            }\n        case CLEAR_SEARCH:\n            return{\n                ...state,\n                search: null\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}