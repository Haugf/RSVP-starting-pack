{"ast":null,"code":"import _slicedToArray from \"/Users/freddyhaug/Desktop/JavaScript/RSVP-starting-pack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/freddyhaug/Desktop/JavaScript/RSVP-starting-pack/src/context/guestContext/GuestState.js\";\nimport React, { useReducer } from 'react';\nimport GuestContext from './guestContext';\nimport guestReducer from './guestReducer';\nimport { TOGGLE_FILTER, SEARCH_GUEST, CLEAR_SEARCH, ADD_GUEST, REMOVE_GUEST } from './../type';\n\nconst GuestState = props => {\n  const initialState = {\n    filterGuests: false,\n    //when we turn this true, the filter in guests.js will filter on isconfirmed\n    search: null,\n    //search is null by deafult\n    guests: [{\n      id: 1,\n      name: \"Jack Smith\",\n      phone: \"333 333 3343\",\n      dietary: \"Vegan\",\n      isConfirmed: false\n    }, {\n      id: 2,\n      name: \"Jacky Brown\",\n      phone: \"333 333 3343\",\n      dietary: \"Vegan\",\n      isConfirmed: true\n    }, {\n      id: 3,\n      name: \"Bob Belcher\",\n      phone: \"333 333 3343\",\n      dietary: \"Non-Veg\",\n      isConfirmed: false\n    }]\n  };\n\n  const _useReducer = useReducer(guestReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // ACTIONS\n\n\n  const addGuest = guest => {\n    //    console.log(\"meh\")\n    guest.id = Date.now(); //lazy uuid\n\n    guest.isConfirmed = false;\n    dispatch({\n      type: ADD_GUEST,\n      payload: guest\n    });\n  };\n\n  const toggleFilter = () => {\n    dispatch({\n      type: TOGGLE_FILTER\n    });\n  };\n\n  const searchGuest = guest => {\n    dispatch({\n      type: SEARCH_GUEST,\n      payload: guest\n    });\n  };\n\n  const clearSearch = guest => {\n    dispatch({\n      type: CLEAR_SEARCH\n    });\n  };\n\n  return React.createElement(GuestContext.Provider, {\n    value: {\n      guests: state.guests,\n      filterGuests: state.filterGuests,\n      search: state.search,\n      addGuest,\n      toggleFilter,\n      searchGuest,\n      clearSearch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GuestState;","map":{"version":3,"sources":["/Users/freddyhaug/Desktop/JavaScript/RSVP-starting-pack/src/context/guestContext/GuestState.js"],"names":["React","useReducer","GuestContext","guestReducer","TOGGLE_FILTER","SEARCH_GUEST","CLEAR_SEARCH","ADD_GUEST","REMOVE_GUEST","GuestState","props","initialState","filterGuests","search","guests","id","name","phone","dietary","isConfirmed","state","dispatch","addGuest","guest","Date","now","type","payload","toggleFilter","searchGuest","clearSearch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACIC,aADJ,EAEIC,YAFJ,EAGIC,YAHJ,EAIIC,SAJJ,EAKIC,YALJ,QAMO,WANP;;AAQA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,YAAY,EAAE,KADG;AACI;AACrBC,IAAAA,MAAM,EAAE,IAFS;AAEH;AACdC,IAAAA,MAAM,EAAC,CACH;AACIC,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,YAFV;AAGIC,MAAAA,KAAK,EAAE,cAHX;AAIIC,MAAAA,OAAO,EAAE,OAJb;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADG,EAQH;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,cAHX;AAIIC,MAAAA,OAAO,EAAE,OAJb;AAKIC,MAAAA,WAAW,EAAE;AALjB,KARG,EAeH;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,cAHX;AAIIC,MAAAA,OAAO,EAAE,SAJb;AAKIC,MAAAA,WAAW,EAAE;AALjB,KAfG;AAHU,GAArB;;AAD0B,sBA6BAlB,UAAU,CAACE,YAAD,EAAeQ,YAAf,CA7BV;AAAA;AAAA,QA6BnBS,KA7BmB;AAAA,QA6BZC,QA7BY,oBAgC3B;;;AAEA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC3B;AACGA,IAAAA,KAAK,CAACR,EAAN,GAAWS,IAAI,CAACC,GAAL,EAAX,CAFwB,CAEF;;AACtBF,IAAAA,KAAK,CAACJ,WAAN,GAAoB,KAApB;AACAE,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEnB,SADD;AAELoB,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GARD;;AAUA,QAAMK,YAAY,GAAG,MAAM;AACvBP,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEtB;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMyB,WAAW,GAAIN,KAAD,IAAW;AAC3BF,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAErB,YADD;AAELsB,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GALD;;AAQA,QAAMO,WAAW,GAAIP,KAAD,IAAW;AAC3BF,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEpB;AADD,KAAD,CAAR;AAGH,GAJD;;AAKC,SACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHQ,MAAAA,MAAM,EAAEM,KAAK,CAACN,MADX;AAEHF,MAAAA,YAAY,EAAEQ,KAAK,CAACR,YAFjB;AAGHC,MAAAA,MAAM,EAAEO,KAAK,CAACP,MAHX;AAIHS,MAAAA,QAJG;AAKHM,MAAAA,YALG;AAMHC,MAAAA,WANG;AAOHC,MAAAA;AAPG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUEpB,KAAK,CAACqB,QAVR,CADJ;AAaH,CA5ED;;AA+EA,eAAetB,UAAf","sourcesContent":["import React, {useReducer} from 'react'\nimport GuestContext from './guestContext'\nimport guestReducer from './guestReducer'\nimport {\n    TOGGLE_FILTER,\n    SEARCH_GUEST,\n    CLEAR_SEARCH,\n    ADD_GUEST,\n    REMOVE_GUEST\n} from './../type'\n\nconst GuestState = (props) => {\n    const initialState = {\n        filterGuests: false, //when we turn this true, the filter in guests.js will filter on isconfirmed\n        search: null, //search is null by deafult\n        guests:[\n            {\n                id: 1,\n                name: \"Jack Smith\",\n                phone: \"333 333 3343\",\n                dietary: \"Vegan\",\n                isConfirmed: false\n            },\n            {\n                id: 2,\n                name: \"Jacky Brown\",\n                phone: \"333 333 3343\",\n                dietary: \"Vegan\",\n                isConfirmed: true\n            },\n            {\n                id: 3,\n                name: \"Bob Belcher\",\n                phone: \"333 333 3343\",\n                dietary: \"Non-Veg\",\n                isConfirmed: false\n            },\n        ]\n    }\n\n    const [state, dispatch] = useReducer(guestReducer, initialState)\n\n\n   // ACTIONS\n\n   const addGuest = (guest) => {\n    //    console.log(\"meh\")\n       guest.id = Date.now() //lazy uuid\n       guest.isConfirmed = false\n       dispatch({\n           type: ADD_GUEST,\n           payload: guest\n       })\n   } \n\n   const toggleFilter = () => {\n       dispatch({\n           type: TOGGLE_FILTER\n       })\n   }\n\n   const searchGuest = (guest) => {\n       dispatch({\n           type: SEARCH_GUEST,\n           payload: guest\n       })\n   }\n\n\n   const clearSearch = (guest) => {\n       dispatch({\n           type: CLEAR_SEARCH\n       })\n   }\n    return (\n        <GuestContext.Provider\n            value={{\n                guests: state.guests,\n                filterGuests: state.filterGuests,\n                search: state.search,\n                addGuest,\n                toggleFilter,\n                searchGuest,\n                clearSearch,\n            }}\n        >{props.children}</GuestContext.Provider>\n    )\n}\n\n\nexport default GuestState"]},"metadata":{},"sourceType":"module"}